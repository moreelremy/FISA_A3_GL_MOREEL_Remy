<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="View_ChangeLanguage" xml:space="preserve">
    <value>Change language</value>
  </data>
  <data name="View_CreateBackup" xml:space="preserve">
    <value>Create a backup</value>
  </data>
  <data name="View_EnterBackupName" xml:space="preserve">
    <value>Enter the backup name: </value>
  </data>
  <data name="View_EnterNumber" xml:space="preserve">
    <value>Please enter a number :</value>
  </data>
  <data name="View_EnterSourcePath" xml:space="preserve">
    <value>Enter the source path: </value>
  </data>
  <data name="View_EnterTargetPath" xml:space="preserve">
    <value>Enter the target path: </value>
  </data>
  <data name="View_ExitApp" xml:space="preserve">
    <value>Exit the application</value>
  </data>
  <data name="InputHelper_InputError" xml:space="preserve">
    <value>The entry cannot be empty. Please enter a valid value.</value>
  </data>
  <data name="Controller_InvalidChoice" xml:space="preserve">
    <value>Invalid choice!</value>
  </data>
  <data name="View_LanguageChoice" xml:space="preserve">
    <value>Choose a language (EN/FR/RU)</value>
  </data>
  <data name="View_ListOfBackups" xml:space="preserve">
    <value>║           List of saves           ║</value>
  </data>
  <data name="View_NoBackups" xml:space="preserve">
    <value>No backups found.</value>
  </data>
  <data name="Controller_PressAnyKey" xml:space="preserve">
    <value>Press any key to continue...</value>
  </data>
  <data name="InputHelper_ReturningToMenu" xml:space="preserve">
    <value>Returning to the main menu... </value>
  </data>
  <data name="View_SaveAddedMessage" xml:space="preserve">
    <value>Save {0} has been added</value>
  </data>
  <data name="View_SelectBackupType" xml:space="preserve">
    <value>Select backup type</value>
  </data>
  <data name="View_StartBackup" xml:space="preserve">
    <value>Start a save</value>
  </data>
  <data name="View_ViewAllSaves" xml:space="preserve">
    <value>See Backups</value>
  </data>
  <data name="ControllerView_ViewLogs" xml:space="preserve">
    <value>View logs</value>
  </data>
  <data name="View_SaveName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="View_SaveSource" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="View_SaveTarget" xml:space="preserve">
    <value>Target</value>
  </data>
  <data name="View_SaveType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="View_FullSave" xml:space="preserve">
    <value>Full backup</value>
  </data>
  <data name="View_DifferentialSave" xml:space="preserve">
    <value>Differential backup</value>
  </data>
  <data name="Controller_ActualRepo" xml:space="preserve">
    <value>Current directory</value>
  </data>
  <data name="Controller_MaxSaveLimitReached" xml:space="preserve">
    <value>Maximum save limit reached (5).</value>
  </data>
  <data name="View_EnterSaveNameToDelete" xml:space="preserve">
    <value>Enter the name of the save to delete:</value>
  </data>
  <data name="View_SaveDeleted" xml:space="preserve">
    <value>Save deleted successfully. </value>
  </data>
  <data name="View_SaveNotFound" xml:space="preserve">
    <value>Save not found. </value>
  </data>
  <data name="View_ChooseSaveToDelete" xml:space="preserve">
    <value>Choose a save to delete: </value>
  </data>
  <data name="View_EnterSaveNumber" xml:space="preserve">
    <value>Enter the number of the save to delete: </value>
  </data>
  <data name="View_DateChoice" xml:space="preserve">
    <value>For what date do you want to view the logs (dd-MM-yyyy) ? [Today]</value>
  </data>
  <data name="View_FileNotFound" xml:space="preserve">
    <value>File not found. Please enter a correct date.</value>
  </data>
  <data name="View_NumberSave" xml:space="preserve">
    <value>Backup number</value>
  </data>
  <data name="Controller_ChoiceDeleteOrMenu" xml:space="preserve">
    <value>Do you want to return to the menu or delete a backup?</value>
  </data>
  <data name="Controller_ChoiceMenu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="Controller_ChoiceDelete" xml:space="preserve">
    <value>Delete a save</value>
  </data>
  <data name="Controller_AskChoiceDelete" xml:space="preserve">
    <value>Which backup do you want to delete?</value>
  </data>
  <data name="View_ChooseSaveToExecute" xml:space="preserve">
    <value>Choose a backup to run:</value>
  </data>
  <data name="View_EnterSaveIdsToExecute" xml:space="preserve">
    <value>Enter the identifiers of the backups to be executed (ex: 1-5):</value>
  </data>
  <data name="View_ExecutionCompleted" xml:space="preserve">
    <value>The backup execution completed successfully.</value>
  </data>
  <data name="View_ExecutionFailed" xml:space="preserve">
    <value>Backup execution failed.</value>
  </data>
  <data name="View_InvalidSelection" xml:space="preserve">
    <value>Invalid selection. Please try again.</value>
  </data>
  <data name="Controller_SaveExecutionError " xml:space="preserve">
    <value>Error running backup '{0}'. Reason: {1}.</value>
  </data>
  <data name="Controller_DirectoryNotFoundError" xml:space="preserve">
    <value>The source directory '{1}' of backup '{0}' does not exist.</value>
  </data>
  <data name="WPF_Leave" xml:space="preserve">
    <value>Leave</value>
  </data>
  <data name="WPF_Property" xml:space="preserve">
    <value>Group 1 property</value>
  </data>
  <data name="WPF_SaveName" xml:space="preserve">
    <value>Backup name</value>
  </data>
  <data name="WPF_SaveSource" xml:space="preserve">
    <value>Source path</value>
  </data>
  <data name="WPF_SaveTarget" xml:space="preserve">
    <value>Target path</value>
  </data>
  <data name="WPF_Folder" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="WPF_Create" xml:space="preserve">
    <value>CREATE</value>
  </data>
  <data name="WPF_Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="WPF_SavePartial" xml:space="preserve">
    <value>Partial backup</value>
  </data>
  <data name="WPF_SaveGlobal" xml:space="preserve">
    <value>Global backup</value>
  </data>
  <data name="WPF_Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="WPF_Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="WPF_FileNotFound" xml:space="preserve">
    <value>There are no Logs for this date:</value>
  </data>
  <data name="WPF_EnterNameSave" xml:space="preserve">
    <value>Enter a backup name</value>
  </data>
  <data name="WPF_SelectSource" xml:space="preserve">
    <value>Select a source folder</value>
  </data>
  <data name="WPF_SelectTarget" xml:space="preserve">
    <value>Select a destination folder</value>
  </data>
  <data name="WPF_SelectedFile" xml:space="preserve">
    <value>Selected Folder</value>
  </data>
  <data name="WPF_Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="WPF_NameProblem" xml:space="preserve">
    <value>The backup name already exists.</value>
  </data>
  <data name="WPF_SourceProblem" xml:space="preserve">
    <value>The source folder does not exist.</value>
  </data>
  <data name="WPF_TargetProblem" xml:space="preserve">
    <value>The destination folder does not exist.</value>
  </data>
  <data name="WPF_Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="WPF_CreateSuccess" xml:space="preserve">
    <value>The backup was created successfully.</value>
  </data>
  <data name="WPF_Details" xml:space="preserve">
    <value>Backup Details</value>
  </data>
  <data name="WPF_FieldProblem" xml:space="preserve">
    <value>Please complete all fields.</value>
  </data>
  <data name="WPF_FormatLog" xml:space="preserve">
    <value>The date format is invalid (example</value>
  </data>
  <data name="WPF_Format" xml:space="preserve">
    <value>format</value>
  </data>
  <data name="WPF_CryptExtension" xml:space="preserve">
    <value>Extension to Encrypt</value>
  </data>
  <data name="View_jsonFileExtension" xml:space="preserve">
    <value>Logs in json format</value>
  </data>
  <data name="View_xmlFileExtension" xml:space="preserve">
    <value>Logs in XML format</value>
  </data>
  <data name="View_logFileExtension" xml:space="preserve">
    <value>Log format</value>
  </data>
  <data name="WPF_TypeSave" xml:space="preserve">
    <value>Backup type</value>
  </data>
  <data name="WPF_Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="WPF_Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="WPF_TransferTime" xml:space="preserve">
    <value>Copy time</value>
  </data>
  <data name="WPF_TypeProblem" xml:space="preserve">
    <value> Please select a backup type.</value>
  </data>
  <data name="WPF_ExtensionProblem" xml:space="preserve">
    <value>Please select a format.</value>
  </data>
  <data name="WPF_EnterDate" xml:space="preserve">
    <value>Enter a date: dd-MM-yyyy</value>
  </data>
  <data name="WPF_SaveDelete" xml:space="preserve">
    <value>Backup name or number</value>
  </data>
  <data name="WPF_CodeSave" xml:space="preserve">
    <value>Name / Number / 1;3 / 1-3</value>
  </data>
  <data name="WPF_Extension" xml:space="preserve">
    <value>Extension to encrypt</value>
  </data>
  <data name="WPF_SettingSoftware" xml:space="preserve">
    <value>Business software:</value>
  </data>
  <data name="WPF_SettingExtensionToCrypt" xml:space="preserve">
    <value>Extension to encrypt:</value>
  </data>
  <data name="WPF_SettingApply" xml:space="preserve">
    <value>APPLY</value>
  </data>
  <data name="WPF_SettingTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="WPF_ExtensionsExample" xml:space="preserve">
    <value>exe ; txt</value>
  </data>
  <data name="WPF_SoftwareExample" xml:space="preserve">
    <value>Calculator ; explorer ; ERP</value>
  </data>
  <data name="Controller_SaveExecutionErrorProcessRunning" xml:space="preserve">
    <value>The business process is running. Operation canceled.</value>
  </data>
  <data name="WPF_SettingSaturationLimit" xml:space="preserve">
    <value>Limit before saturation
(ko)</value>
  </data>
  <data name="WPF_SettingExtensionToPrioritize" xml:space="preserve">
    <value>Extension to prioritize</value>
  </data>
</root>